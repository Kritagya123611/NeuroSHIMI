import algosdk from 'algosdk';
import { Proof, ProverType } from './prover/types';
export declare function compileLSIGTeal(algod: algosdk.Algodv2, source: string, args?: (Uint8Array | Buffer)[]): Promise<algosdk.LogicSigAccount>;
export declare function getVerifierLSIG(algod: algosdk.Algodv2, prover: ProverType, proof?: Proof | undefined): Promise<algosdk.LogicSigAccount>;
export declare function getRS256VerifyLSIG(algod: algosdk.Algodv2, args: Uint8Array[]): Promise<algosdk.LogicSigAccount>;
export declare function getDummyLSIG(algod: algosdk.Algodv2, args: Uint8Array[]): Promise<algosdk.LogicSigAccount>;
interface ContractAccountParams {
    algod: algosdk.Algodv2;
    addressSeed: Uint8Array;
    sessionPK?: Uint8Array;
    tenantAuthAppId: number;
    args?: Uint8Array[];
}
export declare function getContractAccountLSIG({ algod, addressSeed, sessionPK, tenantAuthAppId, args }: ContractAccountParams): Promise<algosdk.LogicSigAccount>;
export {};
//# sourceMappingURL=LSIGs.d.ts.map