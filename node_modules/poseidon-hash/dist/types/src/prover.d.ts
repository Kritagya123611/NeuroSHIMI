import { Proof } from '../types';
export declare function getRS256MessageDigestInfo(jwt: string): Uint8Array;
interface RSAKey {
    mod: Uint8Array;
    exp: Uint8Array;
    sig: Uint8Array;
}
export declare function getRS256Parameters(jwt: string): Promise<RSAKey>;
export declare function getValueFromJWTClaimsAsLittleEndianAscii(key: string, jwt: string): bigint;
export declare function getJWTContentsInputs(jwt: string): Promise<{
    headerBody: string[];
    sizeOfHeaderBody: string;
    sizeOfPaddedHeaderBody: string;
    dotIndex: string;
    publicSubPoseidonHash: string;
    publicNonce: string;
    publicIssMimcHash: string;
    publicHeadBodySha256: string;
}>;
export declare function getJWTSha256Inputs(jwt: string): Promise<{
    headerBody: string[];
    sizeOfPaddedHeaderBody: string;
    publicHeadBodyMimc: string;
    publicHeadBodySha256: string;
}>;
export declare function getJWTContentsProof(jwt: string, awsAccessKeyId: string, awsSecretAccessKey: string): Promise<Proof>;
export declare function getJWTSha256Proof(jwt: string, awsAccessKeyId: string, awsSecretAccessKey: string): Promise<Proof>;
export declare function getJWTContentsProofPublicInput(jwt: string): Promise<Uint8Array>;
export declare function getJWTSHA256ProofPublicInput(jwt: string): Promise<Uint8Array>;
export {};
//# sourceMappingURL=prover.d.ts.map